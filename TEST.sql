--TEST SESSION
-- RPOCEDURE CUSTOMER_ENTER  
DECLARE
    L_CUSTOMER_ID    NUMBER;
    L_CUSTOMER_NAME  VARCHAR2(100);
    L_CUSTOMER_PHONE VARCHAR2(50);
    L_IF_INVALID     VARCHAR2(30);
BEGIN
    L_CUSTOMER_ID    := 3;
    L_CUSTOMER_NAME  := 'CUSTOMER_'||3;
    L_CUSTOMER_PHONE := '531 888 3333';
    L_IF_INVALID     := 'VALID';
    GENERAL_SPORT.CUSTOMER_ENTER(L_CUSTOMER_ID, L_CUSTOMER_NAME, L_CUSTOMER_PHONE, L_IF_INVALID);
END;
 
SELECT * FROM  CUSTOMER;
---------------------------------------------------------------------
-- RPOCEDURE CUSTOMER_DETAILS_ENTER  
DECLARE
    L_CUSTOMER_CODE     VARCHAR2(30);
    L_BIRTH_DAY         DATE;
    L_GENDER            VARCHAR2(1);
    L_CREATING_DATE     DATE;
    L_LOCATION_ID       NUMBER;
    L_CUSTOMER_PRO_CODE VARCHAR2(30);
BEGIN
    L_CUSTOMER_CODE     := 'C003';
    L_BIRTH_DAY         := '14-APR-77';
    L_GENDER            := 'M';
    L_CREATING_DATE     := '24-AUG-20';
    L_LOCATION_ID       := 1;
    L_CUSTOMER_PRO_CODE := NULL;
    GENERAL_SPORT.CUSTOMER_DETAILS_ENTER(L_CUSTOMER_CODE, L_BIRTH_DAY, L_GENDER, L_CREATING_DATE, L_LOCATION_ID, L_CUSTOMER_PRO_CODE);
END;

SELECT * FROM  CUSTOMER_DETAILS;
-----------------------------------------------------
-- RPOCEDURE LOCATION_ENTER  
DECLARE
    L_LOCATION_ID   NUMBER;
    L_LOCATION_NAME VARCHAR2(100);
    L_IF_INVALID    VARCHAR2(30);
BEGIN
    L_LOCATION_ID   := 1;
    L_LOCATION_NAME := 'FATIH';
    L_IF_INVALID    := 'VALID';
    GENERAL_SPORT.LOCATION_ENTER(L_LOCATION_ID, L_LOCATION_NAME, L_IF_INVALID);
END;

SELECT * FROM  LOCATION;
------------------------------------------------------------
-- RPOCEDURE COACH_ENTER  
DECLARE
    L_COACH_ID   NUMBER;
    L_COACH_NAME VARCHAR2(100);
    L_IF_INVALID VARCHAR2(30);
BEGIN
    L_COACH_ID   := 2;
    L_COACH_NAME := 'UMIT';
    L_IF_INVALID := 'VALID';
    GENERAL_SPORT.COACH_ENTER(L_COACH_ID, L_COACH_NAME, L_IF_INVALID);
END;

SELECT * FROM  COACH;
-------------------------------------------------------------
-- RPOCEDURE COACH_DETAILS_ENTER  
DECLARE
    L_COACH_CODE    VARCHAR2(30);
    L_STARTING_HOUR NUMBER;
    L_ENDING_HOUR   NUMBER;
    L_SPORT_ID      NUMBER;
                                  
BEGIN
    L_COACH_CODE    := 'CO002';
    L_STARTING_HOUR := 7;
    L_ENDING_HOUR   := 20;
    L_SPORT_ID      := 2;
    GENERAL_SPORT.COACH_DETAILS_ENTER(L_COACH_CODE, L_STARTING_HOUR, L_ENDING_HOUR, L_SPORT_ID);
END;

SELECT * FROM  COACH_DETAILS;
-------------------------------------------------------------
-- RPOCEDURE SPORT_ENTER  
DECLARE
    L_SPORT_ID   NUMBER;
    L_SPORT_NAME VARCHAR2(100);
    L_IF_INVALID VARCHAR2(30);
                                  
BEGIN
    L_SPORT_ID    := 2;
    L_SPORT_NAME  := 'SWIMMING';
    L_IF_INVALID  := 'VALID';
    GENERAL_SPORT.SPORT_ENTER(L_SPORT_ID, L_SPORT_NAME, L_IF_INVALID);
END;

SELECT * FROM  SPORT;
--------------------------------------------------------------
-- RPOCEDURE CHARGE_ENTER  
DECLARE
    L_CHARGE_ID    NUMBER;
    L_SPORT_ID     NUMBER;
    L_CAHRGE_YEAR  NUMBER;
    L_CHARGE_MONTH NUMBER;
    L_IF_INVALID   VARCHAR2(30);          
BEGIN
    L_CHARGE_ID    := 2;
    L_SPORT_ID     := 2;
    L_CAHRGE_YEAR  := 1200;
    L_CHARGE_MONTH := 150;
    L_IF_INVALID   := 'VALID';
    GENERAL_SPORT.CHARGE_ENTER(L_CHARGE_ID, L_SPORT_ID, L_CAHRGE_YEAR, L_CHARGE_MONTH, L_IF_INVALID);
END;

SELECT * FROM  CHARGE;
----------------------------------------------------------------
-- RPOCEDURE CUSTOMER_SPORT_ENTER  
DECLARE
    L_CUSTOMER_SPORT_ID    NUMBER;
    L_CUSTOMER_NAME        VARCHAR2(100);
    L_SPORT_NAME_ONE       VARCHAR2(100);
    L_COACH_NAME_ONE       VARCHAR2(100);
    L_SPORT_NAME_TWO       VARCHAR2(100);
    L_COACH_NAME_TWO       VARCHAR2(100);
    L_IF_INVALID           VARCHAR2(100);
                                             
BEGIN
    L_CUSTOMER_SPORT_ID    := 2;
    L_CUSTOMER_NAME        := 'CUSTOMER_2';
    L_SPORT_NAME_ONE       := 'BASKETBALL';
    L_SPORT_NAME_TWO       := 'SWIMMING';
    L_COACH_NAME_ONE       := 'AHMET';
    L_COACH_NAME_TWO       := 'UMIT';
    L_IF_INVALID           := 'VALID';
    GENERAL_SPORT.CUSTOMER_SPORT_ENTER(L_CUSTOMER_SPORT_ID, L_CUSTOMER_NAME, L_SPORT_NAME_ONE, L_COACH_NAME_ONE, 
                                       L_SPORT_NAME_TWO, L_COACH_NAME_TWO, L_IF_INVALID);
END;

SELECT * FROM  CUSTOMER_SPORT;

-----------------------------------------------------------
-- RPOCEDURE CUSTOMER_SPORT_DETAILS_ENTER  
DECLARE
    L_CUSTOMER_SPORT_CODE   VARCHAR2(30);
    L_CUSTOMER_ID           NUMBER;
    L_STARTING_DATE_ONE     DATE;
    L_ENDING_DATE_ONE       DATE;
    L_STARTING_DATE_TWO     DATE;
    L_ENDING_DATE_TWO       DATE;
    L_SPORT_HOUR_ONE        NUMBER;
    L_SPORT_HOUR_TWO        NUMBER;
    L_SPORT_ID_ONE          NUMBER;
    L_SPORT_ID_TWO          NUMBER;
    L_COACH_ID_ONE          NUMBER;
    L_COACH_ID_TWO          NUMBER;
    L_LAST_CHARGE_DATE_ONE  DATE;
    L_LAST_CHARGE_DATE_TWO  DATE;
BEGIN
    L_CUSTOMER_SPORT_CODE   := 'CS002';
    L_CUSTOMER_ID           := 2;
    L_STARTING_DATE_ONE     := '01-OCT-2020';
    L_STARTING_DATE_TWO     := '01-OCT-2020';
    L_ENDING_DATE_ONE       := '01-OCT-2021';
    L_ENDING_DATE_TWO       := '01-OCT-2021';
    L_SPORT_HOUR_ONE        := 11;
    L_SPORT_HOUR_TWO        := 14;
    L_SPORT_ID_ONE          := 1;
    L_SPORT_ID_TWO          := 2;
    L_COACH_ID_ONE          := 1;
    L_COACH_ID_TWO          := 2;
    L_LAST_CHARGE_DATE_ONE  := L_STARTING_DATE_ONE + 15;
    L_LAST_CHARGE_DATE_TWO  := L_STARTING_DATE_TWO + 15;
    GENERAL_SPORT.CUSTOMER_SPORT_DETAILS_ENTER(L_CUSTOMER_SPORT_CODE, L_CUSTOMER_ID, L_STARTING_DATE_ONE, L_ENDING_DATE_ONE, 
                                            L_STARTING_DATE_TWO, L_ENDING_DATE_TWO, L_SPORT_HOUR_ONE, L_SPORT_HOUR_TWO,
                                            L_SPORT_ID_ONE, L_SPORT_ID_TWO, L_COACH_ID_ONE, L_COACH_ID_TWO, L_LAST_CHARGE_DATE_ONE, 
                                            L_LAST_CHARGE_DATE_TWO);
END;

SELECT * FROM  CUSTOMER_SPORT_DETAILS;



--DECLARE
--L CUSTOMER % ROWTYPE; 
--BEGIN 
--    L:= GENERAL_SPORT.CUSTOMER_DATA(2);------------DON
--    DBMS_OUTPUT.PUT_LINE(L.CUSTOMER_NAME);
--END;
------------------------------------------------------------------------------
-- RPOCEDURE RPOMOTION_ENTER  
DECLARE
    L_PROMOTION_ID        NUMBER;
    L_PROMOTION_TYPE      VARCHAR2(100);
    L_PROMOTION_CODE      VARCHAR2(30);
    L_DISCOUNT_PERCENTAGE NUMBER;
    L_IF_INVALID          VARCHAR2(30);
                                      
BEGIN
    L_PROMOTION_ID        := 5;
    L_PROMOTION_TYPE      := 'NORMAL PROGRAM';
    L_PROMOTION_CODE      := 'PRO_NORMAL';
    L_DISCOUNT_PERCENTAGE := 10/100;
    L_IF_INVALID          := 'VALID';
    GENERAL_SPORT.PROMOTION_ENTER(L_PROMOTION_ID, L_PROMOTION_TYPE,
                                  L_PROMOTION_CODE, L_DISCOUNT_PERCENTAGE, L_IF_INVALID);
END;

SELECT * FROM  PROMOTION;
----------------------------------------------------------------
--FUNCTION FIND PROMOTION AND UPDATE PROMOTION
DECLARE
BEGIN 
    FOR I IN 1..2 LOOP
        GENERAL_SPORT.UPDATE_PROMOTION(I);   
    END LOOP;
END; 
SELECT * FROM  CUSTOMER_DETAILS;
--------------------------------------------------------
--FUNCTION FIND PROMOTION 
DECLARE
    L_PROMOTION PROMOTION % ROWTYPE;
BEGIN 
    L_PROMOTION := GENERAL_SPORT.FIND_PROMOTION(1);
    DBMS_OUTPUT.PUT_LINE(L_PROMOTION.PROMOTION_CODE);
END; 
SELECT * FROM  CUSTOMER_DETAILS;
----------------------------------------------------
--FUNCTION COMPUTE_INVOICE 
DECLARE
    L_INVOICE INVOICE % ROWTYPE;
    L_CUSTOMER_SPORT_ID NUMBER;
    L_CUSTOMER_ID NUMBER;
BEGIN 
    L_CUSTOMER_SPORT_ID := 2;
    L_CUSTOMER_ID       := 2;
    L_INVOICE := GENERAL_SPORT.COMPUTE_INVOICE(L_CUSTOMER_SPORT_ID, L_CUSTOMER_ID);
    GENERAL_SPORT.INVOICE_ENTER(2, L_INVOICE.CUSTOMER_NAME, L_INVOICE.SPORT_NAME_ONE, L_INVOICE.SPORT_NAME_TWO, L_INVOICE.MONTH_COUNT_ONE,
                                L_INVOICE.MONTH_COUNT_TWO, L_INVOICE.TOTAL_COST, L_INVOICE.INVOICE_DATE, L_INVOICE.TOTAL_COST_WITH_DISCOUNT);
END;

SELECT * FROM  INVOICE;
---------------------------------------------------------------------
--FUNCTION COMPUTE_INVOICE_DETAILS
DECLARE
    L_INVOICE_DETAILS INVOICE_DETAILS % ROWTYPE;
    L_CUSTOMER_SPORT_ID NUMBER;
    L_CUSTOMER_ID       NUMBER;
    L_INVOICE_ID        NUMBER;
    L_BANK_ACCOUNT     VARCHAR2(100);
BEGIN 
    L_CUSTOMER_SPORT_ID := 2;
    L_INVOICE_ID        := 2;
    L_CUSTOMER_ID       := 2;
    L_BANK_ACCOUNT      := 'TR01110222111557777666';
    L_INVOICE_DETAILS   := GENERAL_SPORT.COMPUTE_INVOICE_DETAILS(L_INVOICE_ID, L_CUSTOMER_SPORT_ID, L_CUSTOMER_ID);
    GENERAL_SPORT.INVOICE_DETAILS_ENTER(L_INVOICE_DETAILS.INVOICE_CODE, L_BANK_ACCOUNT, L_INVOICE_DETAILS.COST_SPORT_ONE, 
                                        L_INVOICE_DETAILS.COST_SPORT_TWO, L_INVOICE_DETAILS.PROMO_CREATING_DATE,
                                        L_INVOICE_DETAILS.PROMO_STARTING_DATE, L_INVOICE_DETAILS.PROMO_ENDING_DATE, 
                                        L_INVOICE_DETAILS.EXPLAIN_INVOICE, L_INVOICE_DETAILS.PROMO_DISCOUNT_PERCENTAGE);
                                
END;

SELECT * FROM  INVOICE_DETAILS;
------------------------------------------------------------------------
---------------------------------------------------------
--PROCEEDURE FOR CONTROL LAST CHARGE DATE
DECLARE 
BEGIN 
    GENERAL_SPORT.CHECK_LAST_CHARGE_DATE;
END;
-----------------------------------------------------
--CHECK_LAST_CHARGE_DATE(CUSTOMER_SPORT_COUNT)
DECLARE
BEGIN
  DBMS_SCHEDULER.CREATE_JOB(
    JOB_NAME        => 'MY_JOB_FOR_CHECK_LAST_CHARGE_DATE',
    JOB_TYPE        => 'PLSQL_BLOCK',
    JOB_ACTION      => 'GENERAL_SPORT.CHECK_LAST_CHARGE_DATE;',
    START_DATE      => TRUNC(SYSDATE), 
    REPEAT_INTERVAL => 'TRUNC(SYSDATE+1)');
    --REPEAT_INTERVAL => 'FREQ=weekly;BYDAY=min,tue,wed,thu,fri;BYHOUR=7,8,9,10,11,12;BYMINUTE=0;BYSECOND=0');
END;

BEGIN
    GENERAL_SPORT.CHECK_LAST_CHARGE_DATE;
END;
-----------------------------------------------------------------------------------
--UPDATE SEQ OR ENTER 
DECLARE 
    L_CUSTOMER_SPORT_ID    NUMBER;
    L_CUSTOMER_NAME        VARCHAR2(100);
    L_SPORT_NAME_ONE       VARCHAR2(100);
    L_COACH_NAME_ONE       VARCHAR2(100);
    L_SPORT_NAME_TWO       VARCHAR2(100);
    L_COACH_NAME_TWO       VARCHAR2(100);
    L_IF_INVALID           VARCHAR2(100);
BEGIN 
    L_CUSTOMER_SPORT_ID    := 3;
    L_CUSTOMER_NAME        := 'CUSTOMER_1';
    L_SPORT_NAME_ONE       := 'BASKETBALL';
    L_COACH_NAME_ONE       := 'AHMET';
    --L_SPORT_NAME_TWO       := 'SWIMMING';
    --L_COACH_NAME_TWO       := 'UMIT';
    L_IF_INVALID           := 'VALID';
    GENERAL_SPORT.UPDATE_SEQ_OR_ENTER(L_CUSTOMER_SPORT_ID, L_CUSTOMER_NAME, L_SPORT_NAME_ONE, L_COACH_NAME_ONE,
                                      L_SPORT_NAME_TWO, L_COACH_NAME_TWO, L_IF_INVALID);
END;

SELECT * FROM  CUSTOMER_SPORT;
-------------------------------------------------------------------------------------
--COMPUTE_REFUND_INVOICE
DECLARE 
    L_INVOICE_ID              NUMBER    := 2;
    L_CANCEL_REGISTRATION_ONE DATE      := '01-APR-2021';--KONTOL TARIH STARTING ONCE OLMASIN
    L_CANCEL_REGISTRATION_TWO DATE      := '01-APR-2021';
    L_REFUND_INVOICE          REFUND_INVOICE%ROWTYPE;
BEGIN
    L_REFUND_INVOICE:= GENERAL_SPORT.COMPUTE_REFUND_INVOICE(P_INVOICE_ID                => L_INVOICE_ID, 
                                                            P_CANCEL_REGISTRATION_ONE   => L_CANCEL_REGISTRATION_ONE, 
                                                            P_CANCEL_REGISTRATION_TWO   => L_CANCEL_REGISTRATION_TWO);
                                                            
    INSERT INTO REFUND_INVOICE (REFUND_ID, CUSTOMER_NAME, CANCEL_REGISTRATION_ONE,
                                CANCEL_REGISTRATION_TWO, REFUND_ONE,
                                REFUND_TWO, REFUND_TOTAL, INVOICE_ID)
    VALUES                     (2, L_REFUND_INVOICE.CUSTOMER_NAME, L_REFUND_INVOICE.CANCEL_REGISTRATION_ONE,
                                L_REFUND_INVOICE.CANCEL_REGISTRATION_TWO, L_REFUND_INVOICE.REFUND_ONE,
                                L_REFUND_INVOICE.REFUND_TWO,L_REFUND_INVOICE.REFUND_TOTAL, L_REFUND_INVOICE.INVOICE_ID);
END;
/
SELECT * FROM  REFUND_INVOICE;
--------------------------------------------------------------------------------------

SELECT * FROM  CUSTOMER_DETAILS;
SELECT * FROM  CUSTOMER;
SELECT * FROM  SPORT;
SELECT * FROM  COACH;
SELECT * FROM  COACH_DETAILS;
SELECT * FROM  CHARGE;
SELECT * FROM  LOCATION;
SELECT * FROM  CUSTOMER_SPORT;
SELECT * FROM  TEMP_CUSTOMER_SPORT;
SELECT * FROM  CUSTOMER_SPORT_DETAILS;
SELECT * FROM  PROMOTION;
SELECT * FROM  INVOICE;
 SELECT * FROM INVOICE_DETAILS;
SELECT * FROM  LOG;
SELECT * FROM  LOG_DETAILS;

